#--------------------------------------------------------#
## Step 3:     # Build word cloud                       #
#--------------------------------------------------------#
build_wordcloud <- function(dtm, 
                                max.words1, # max no. of words to accommodate
                                min.freq,   # min.freq of words to consider
                                title1){        # write within double quotes
require(wordcloud)
if (ncol(dtm) > 20000){   # if dtm is overly large, break into chunks and solve

tst = round(ncol(dtm)/100)  # divide DTM's cols into 100 manageble parts
a = rep(tst,99)
b = cumsum(a);rm(a)
b = c(0,b,ncol(dtm))

ss.col = c(NULL)
for (i in 1:(length(b)-1)) {
  tempdtm = dtm[,(b[i]+1):(b[i+1])]
  s = colSums(as.matrix(tempdtm))
  ss.col = c(ss.col,s)
  print(i)      } # i loop ends

 tsum = ss.col

 } else { tsum = apply(dtm, 2, sum) }

tsum = tsum[order(tsum, decreasing = T)]       #terms in decreasing order of freq
# head(tsum)
# tail(tsum)

# windows()  # New plot window
 wordcloud(names(tsum), tsum,     # words, their freqs 
          scale = c(3.5, 0.5),     # range of word sizes
          min.freq,                     # min.freq of words to consider
          max.words = max.words1,       # max #words
          colors = brewer.pal(8, "Dark2"))    # Plot results in a word cloud 
 title(sub = title1)     # title for the wordcloud display

    } # func ends